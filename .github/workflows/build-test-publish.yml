name: Build, Test, (Publish)

on: [push, pull_request]

env:
  FOUNDRY_PROFILE: ci

jobs:
  build-test:
    name: Forge Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: stable

      - name: Show Forge version
        run: |
          forge --version

      - name: Run Forge fmt
        run: |
          forge fmt --check
        id: fmt

      - name: Run Forge build
        run: |
          forge build --sizes
        id: build

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test

      - uses: actions/upload-artifact@v4
        with:
          name: json-abi
          path: out/**/*.json
          retention-days: 1
        if: startsWith(github.ref, 'refs/tags/')

  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-node@v4
        name: Install Node
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9

      - run: pnpm install --frozen-lockfile
        name: Install Dependencies

      - run: pnpm run solhint-strict
        name: Solhint

  slither:
    name: Slither
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Slither static analysis
        uses: crytic/slither-action@v0.4.1
        id: slither

  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [build-test]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/download-artifact@v4
        with:
          name: json-abi
          path: out/

      - uses: actions/setup-node@v4
        name: Install Node
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9

      - run: pnpm install --frozen-lockfile
        name: Install Dependencies

      - run: pnpm pack
        name: Install Dependencies

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          files: |
            subsub-contracts-*.tgz
            README.md
            LICENSE

      - run: pnpm publish --tag ${NPM_TAG} --no-git-checks
        name: Publish to NPM Registry
        env:
          NPM_TAG: ${{ (contains(github.ref, 'alpha') || contains(github.ref, 'beta')) && 'next' || 'latest' }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}